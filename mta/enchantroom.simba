program enchantroom;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I WaspLib/osr.simba}
{$DEFINE FORMS_V2}

begin
  Login.PlayerIndex := 0;
end;

const
  BREAKAFTER  = 40;
  BREAKFOR    = 5;

  // HERE YOU CAN EDIT THE SPELL YOU WANT TO USE.
  // EXAMPLE: SAPPHIRE ENCHANT IS ERSSPell.LVL1_ENCHANT
  ENCHANTSPELL: ERSSPell := ERSSpell.LVL5_ENCHANT;

var
  RSW: TRSWalker;
  State: String;
  Timer: TStopwatch;
  StartXP, CurrentXP, GainedXP: Int32;
  JoinTile: TPoint := [268, 106];
  JoinTeleportTile: TPoint := [258, 106];
  STATUEAREA: TPointArray := [[258, 86], [280, 86], [291, 96],
                              [290, 116], [278, 129], [279, 141],
                              [261, 141], [261, 129], [250, 118],
                              [250, 96]];
  MTALOBBY: TPointArray := [[241, 159], [241, 145], [251, 145],
                            [260, 141], [268, 141], [275, 141],
                            [283, 143], [297, 145], [298, 171],
                            [282, 171], [282, 184], [256, 185],
                            [256, 170], [241, 169]];
  ECROOM: TPointArray := [[23, 532], [263, 528], [262, 771], [9, 762]];
  ORB: TRSItem := 'Orb';
  CUBE: TRSItem := 'Cube';


procedure PauseTimer(Task: PBreakTask);
var T: PBreakTask;
begin
  Timer.Pause;
  T := Task;
end;

procedure ResumeTimer(Task: PBreakTask);
var T: PBreakTask;
begin
  Timer.Resume;
  T := Task;
end;

// A custom Keyboard version of Antiban.RandomRotate()
// Rotating with mouse3 doesn't work well with RuneLite
procedure KeyboardRotate();
var
  Arrow: Integer;
  Duration: Int64;
begin
  if SRL.Dice(50) then
    Arrow := $25
  else
    Arrow := $27;
  Duration := SRL.NormalRange(500, 1500);
  Keyboard.KeyDown(Arrow);
  Sleep(Duration);
  Keyboard.KeyUp(Arrow);
end;


procedure PrintProgress();
begin
  ClearDebug();
  WriteLn('| MTA v2.0              by n0ll |');
  WriteLn('| The Enchanting Chamber        |');
  WriteLn('|-------------------------------|');
  WriteLn('| Time running   : ', SRL.MsToTime(GetTimeRunning, Time_Short));
  WriteLn('| Magic XP       : ', GainedXP);
  WriteLn('| XP/Hour        : ', Round((GainedXP/((GetTimeRunning()/3600))), 2), ' K');
  WriteLn('| Failsafe timer : ', SRL.MsToTime((300000-Timer.ElapsedTime), Time_Short));
  WriteLn('| Next break     : ', Antiban.TimeUntilBreak(Antiban.Breaks[0]));
  WriteLn('|-------------------------------|');
end;

procedure SetupAntiBan();
begin
  Antiban.Skills := [ERSSKILL.MAGIC, ERSSKILL.TOTAL];
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.RandomRightClick);
  Antiban.AddTask(ONE_SECOND  * 45,  @Mouse.RandomMovement);
  Antiban.AddTask(ONE_MINUTE  * 5,   @KeyboardRotate);
  Antiban.AddTask(ONE_MINUTE  * 15,  @Antiban.HoverSkills);
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.LoseFocus);
  Antiban.AddBreak(BREAKAFTER * ONE_MINUTE, BREAKFOR * ONE_MINUTE);
  Antiban.AddBreak(12 * ONE_HOUR, 4 * ONE_HOUR);
  Antiban.OnStartBreak := @PauseTimer;
  Antiban.OnFinishBreak := @ResumeTimer;
end;

procedure Downloader(const URL, Filename: string);
var Client: Int32;
begin
  Client := InitializeHTTPClient(False);
  try
    GetHTTPPageEx(Client, URL, Filename);
  finally
    FreeHTTPClient(Client);
  end;
end;

procedure InitiateScript();
begin
  if (not FileExists(AppPath+'\Includes\WaspLib\osr\walker\maps\mta.png')) then
    Downloader('https://i.imgur.com/yRapvnM.png', AppPath+'\Includes\WaspLib\osr\walker\maps\mta.png');

  RSW.Setup('mta');
  SetupAntiBan();
  if not RSClient.IsLoggedIn() then
    Login.LoginPlayer();
  WaitUntil(RSClient.IsLoggedIn(), 100, 10000);
  StartXP := XPBar.Read();
  Timer.Start();
end;


procedure CalculateXP();
var t: Int32;
begin
  CurrentXP := XPBar.Read();
  t         := GainedXP;
  GainedXP  := CurrentXP - StartXP;
  if (GainedXP > t) then
    Timer.Reset();
  if (Timer.ElapsedTime() > 300000) then
    TerminateScript('No Gained XP in 5 minutes!');
end;

function GetState(): string;
var Pos: TPoint;
begin
  CalculateXP();
  Pos := RSW.GetMyPos();
  if (ECROOM.Bounds.Contains(Pos)) then
    Exit('INROOM');
  if (STATUEAREA.Bounds.Contains(Pos)) then
    Exit('STATUEAREA');
  if (MTALOBBY.Bounds.Contains(Pos)) then
    Exit('MTALOBBY');
  Exit('UNKNOWN');
end;

procedure EnterRoom();
var
  Rect: TRectangle;
begin
  Rect := RSW.GetTileMs(JoinTeleportTile);
  Mouse.HumanMove(Rect.mean());
  WaitEx(50, 25);
  if Mainscreen.IsUpText('Enchanters Teleport') then
    Mouse.Click(MOUSE_LEFT)
  else
    KeyboardRotate();
end;

procedure GatherCubes();
var
  TPA: TPointArray;
  Pos: TPoint;
  CubeTile: TPoint := [84, 580];
  WalkTile: TPoint := [88, 588];
  Color: TCTS2Color := CTS2(2992836, 5, 0.21, 2.64);
  Bds: TBox;
  Rect: TRectangle;
begin
  Pos := RSW.GetMyPos();
  if Mainscreen.IsUpText('Cast') then
    Mouse.Click(MOUSE_LEFT);

  if (Pos.DistanceTo(CubeTile) > 10) then
    RSW.WalkBlind(WalkTile, 0);

  if MainScreen.IsUpText('Take-from') then
    begin
      Mouse.Click(MOUSE_LEFT);
      Exit();
    end;

  Rect := RSW.GetTileMS(CubeTile);
  Bds := Rect.Bounds();
  Bds.LimitTo(Mainscreen.Bounds());
  SRL.FindColors(TPA, Color, Bds);

  if (TPA.Len > 0) then
    begin
      Mouse.HumanMove(TPA.Mean());
      WaitEx(50, 25);
      if Mainscreen.IsUpText('Take-from') then
        Mouse.Click(MOUSE_LEFT)
      else
        KeyboardRotate();
    end
  else
    KeyboardRotate();
end;

procedure DepositOrbs();
var
  Pos: TPoint;
  Rect: TRectangle;
  DepositHoleTile: TPoint := [128, 636];
begin
  if Mainscreen.IsUpText('Cast') then
    Mouse.Click(MOUSE_LEFT);

  PrintProgress();
  Pos := RSW.GetMyPos();

  if (Pos.DistanceTo(DepositHoleTile) > 16) then
    RSW.WalkBlind([132, 628]);

  WaitEx(550, 50);
  Rect := RSW.GetTileMs(DepositHoleTile);
  Mouse.HumanMove(Rect.Mean());
  WaitEx(50, 25);

  if Mainscreen.IsUpText('Deposit') then
    begin
      Mouse.Click(MOUSE_LEFT);
      WaitUntil((not Inventory.ContainsItem(ORB)), 200, 10000);
    end
  else
    KeyboardRotate();
end;

procedure EnchantCubes();
var
  allSlots: TIntegerArray;
  i: Int32;
begin
  if (SRL.Dice(90)) then
    begin
      Inventory.FindItem(CUBE, allSlots);
      for i := 0 to allSlots.Len() do
        begin
          Magic.CastSpell(ENCHANTSPELL);
          WaitEx(50, 25);
          if (not Inventory.ContainsItem(CUBE)) then
            break;
          Inventory.MouseSlot(allSlots.Max());
          WaitEx(50, 25);
          Mouse.Click(MOUSE_LEFT);
          WaitEx(1337, 50);
        end;
    end
  else
    begin
      Magic.CastSpell(ENCHANTSPELL);
      WaitEx(250, 50);
      Inventory.MouseItem(CUBE);
      WaitEx(250, 50);
      Mouse.Click(MOUSE_LEFT);
      WaitEx(250, 50);
      WaitUntil(not Inventory.ContainsItem(CUBE), 1250, 120000);
    end;
end;

procedure SolveRoom();
begin
  if (not Inventory.IsFull()) then GatherCubes()
  else if Inventory.ContainsItem(CUBE) then EnchantCubes()
  else if Inventory.ContainsItem(ORB) then DepositOrbs();
end;

begin
  InitiateScript();
  repeat
    begin
      Antiban.DoAntiban();
      if (not RSClient.IsLoggedIn()) then
        Login.LoginPlayer();
      State := GetState();
      case State of
        'MTALOBBY'   : RSW.WalkBlind(JoinTile);
        'INROOM'     : SolveRoom();
        'STATUEAREA' : EnterRoom();
        'UNKNOWN'    : Logout.ClickLogout();
      end;
    WaitEx(200, 50);
    end;
  until false;
end.