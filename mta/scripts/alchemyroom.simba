program alchemyroom;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I WaspLib/osr.simba}
{$DEFINE FORMS_V2}

  // HERE YOU CAN EDIT WHICH ACCOUNT YOU WANT TO USE.
  // FIRST ACCOUNT IN credentials.simba MEANS Login.PlayerIndex := 0
begin
  Login.PlayerIndex := 1;
end;

const
  BREAKAFTER  = 40;
  BREAKFOR    = 5;

var
  RSW: TRSWalker;
  State: String;
  Timer: TStopwatch;
  StartXP: Int32;
  CurrentXP: Int32;
  GainedXP: Int32 := 0;
  JoinTile: TPoint := [268, 110];
  STATUEAREA: TPointArray := [[258, 86], [280, 86], [291, 96],
                              [290, 116], [278, 129], [279, 141],
                              [261, 141], [261, 129], [250, 118],
                              [250, 96]];
  MTALOBBY: TPointArray := [[241, 159], [241, 145], [251, 145], [260, 141],
                            [268, 141], [275, 141], [283, 143], [297, 145],
                            [298, 171], [282, 171], [282, 184], [256, 185],
                            [256, 170], [241, 169]];
  APROOM: TPointArray := [[352, 523], [563, 522], [556, 765], [354, 764]];


procedure PauseTimer(Task: PBreakTask);
var T: PBreakTask;
begin
  Timer.Pause;
  T := Task;
end;

procedure ResumeTimer(Task: PBreakTask);
var T: PBreakTask;
begin
  Timer.Resume;
  T := Task;
end;

// A custom Keyboard version of Antiban.RandomRotate()
// Rotating with mouse3 doesn't work well with RuneLite
procedure KeyboardRotate();
var
  Arrow: Integer;
  Duration: Int64;
begin
  if SRL.Dice(50) then
    Arrow := $25
  else
    Arrow := $27;
  Duration := SRL.NormalRange(500, 1500);
  Keyboard.KeyDown(Arrow);
  Sleep(Duration);
  Keyboard.KeyUp(Arrow);
end;

procedure PrintProgress();
begin
  ClearDebug();
  WriteLn('| MTA v2.0              by n0ll |');
  WriteLn("| The Alchemist's Playground    |");
  WriteLn('|-------------------------------|');
  WriteLn('| Time running   : ', SRL.MsToTime(GetTimeRunning, Time_Short));
  WriteLn('| Magic XP       : ', GainedXP);
  WriteLn('| XP/Hour        : ', Round((GainedXP/((GetTimeRunning()/3600))), 2), ' K');
  WriteLn('| Failsafe timer : ', SRL.MsToTime((300000-Timer.ElapsedTime), Time_Short));
  WriteLn('| Next break     : ', Antiban.TimeUntilBreak(Antiban.Breaks[0]));
  WriteLn('|-------------------------------|');
end;

procedure SetupAntiBan();
begin
  Antiban.Skills := [ERSSKILL.MAGIC, ERSSKILL.TOTAL];
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.RandomRightClick);
  Antiban.AddTask(ONE_SECOND  * 45,  @Mouse.RandomMovement);
  Antiban.AddTask(ONE_MINUTE  * 5,   @KeyboardRotate);
  Antiban.AddTask(ONE_MINUTE  * 15,  @Antiban.HoverSkills);
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.LoseFocus);
  Antiban.AddBreak(BREAKAFTER * ONE_MINUTE, BREAKFOR * ONE_MINUTE);
  Antiban.AddBreak(12 * ONE_HOUR, 4 * ONE_HOUR);
  Antiban.OnStartBreak := @PauseTimer;
  Antiban.OnFinishBreak := @ResumeTimer;
end;

procedure Downloader(const URL, Filename: string);
var Client: Int32;
begin
  Client := InitializeHTTPClient(False);
  try
    GetHTTPPageEx(Client, URL, Filename);
  finally
    FreeHTTPClient(Client);
  end;
end;

procedure InitiateScript();
begin
  if (not FileExists(AppPath+'\Includes\WaspLib\osr\walker\maps\mta.png')) then
    Downloader('https://i.imgur.com/yRapvnM.png', AppPath+'\Includes\WaspLib\osr\walker\maps\mta.png');

  RSW.Setup('mta');
  SetupAntiBan();
  if not RSClient.IsLoggedIn() then
    Login.LoginPlayer();
  WaitUntil(RSClient.IsLoggedIn(), 100, 10000);
  StartXP := XPBar.Read();
  Timer.Start();
end;

// Thanks to Flight for helping with this.
function TRSItemInterface.CountStack(item: TRSItem): Int32; override;
var box: TBox;
begin
  inherited;
  Result := -1;
  if Self.Find([item], box) then
  begin
    box.X2 := box.X1 + 35;
    box.Y2 := box.Y1 + 7;
    Result := SRL.GetItemAmount(box);
  end;
end;

procedure CalculateXP();
var t: Int32;
begin
  CurrentXP := XPBar.Read();
  t         := GainedXP;
  GainedXP  := CurrentXP - StartXP;
  if (GainedXP > t) then
    Timer.Reset();
  if (Timer.ElapsedTime > 300000) then
    TerminateScript('No Gained XP in 5 minutes!');
end;

function GetState(): string;
var Pos: TPoint;
begin
  CalculateXP();
  Pos := RSW.GetMyPos();

  if (APROOM.Bounds.Contains(Pos)) then
    Exit('INROOM');
  if (STATUEAREA.Bounds.Contains(Pos)) then
    Exit('STATUEAREA');
  if (MTALOBBY.Bounds.Contains(Pos)) then
    Exit('MTALOBBY');

  Exit('UNKNOWN');
end;

procedure EnterRoom();
var
  Rect: TRectangle;
  StatueTile: TPoint := [268, 94];
begin
  Rect := RSW.GetTIleMS(StatueTile);
  Mouse.HumanMove(Rect.Mean());
  if Mainscreen.IsUpText('Enter Alch') then
    begin
      Mouse.Click(MOUSE_LEFT);
      WaitEx(2000, 500);
    end
  else
    KeyboardRotate();
end;

procedure GatherItems();
var
  Pt, Pos: TPoint;
  MSTPA: TPointArray;
  PBox: TBox;
  FreeSlots: Int32;
  CBArea: TBox := [428, 592, 476, 656];
begin
  if Mainscreen.IsUpText('Cast') then
    Mouse.Click(MOUSE_LEFT);

  Pos := RSW.GetMyPos();

  if (not CBArea.Contains(Pos)) then
    RSW.WalkBlind([448, 624]);

  WaitUntil(Mainscreen.FindArrow(MSTPA), 50, 900);
  if (MSTPA.Len > 0) then
    begin
      Mouse.HumanMove(MSTPA.Last());
      WaitEx(50, 25);
        if Mainscreen.IsUpText('Cupboard') then
          begin
            Pt := Mouse.Position();
            Mouse.Click(MOUSE_LEFT);
            PBox := Mainscreen.GetPlayerBox();
            PBox := PBox.Expand(15);

            // Let's wait if the player needs to run to the cupboard
            if (not PBox.Contains(Pt)) then
              begin
                FreeSlots := Inventory.CountEmptySlots();
                WaitUntil((FreeSlots > Inventory.CountEmptySlots), 100, 5000);
              end;
          end
        else
          KeyboardRotate();
    end
    else
      KeyboardRotate();
end;

procedure WalkToStatues();
begin
  RSW.WalkBlind(JoinTile);
  Antiban.DoAntiban();
end;

procedure DepositCoins();
var
  TPA: TPointArray;
  Bds: TBox;
  Rect: TRectangle;
  DepositTiles: TPointArray := [[448, 580], [452, 580]];
  Pos, GoalTile: TPoint;
  DepositColor: TCTS2Color := CTS2(2961894, 4, 0.11, 5.43);
begin
  Pos := RSW.GetMyPos();
  GoalTile := DepositTiles.RandomValue();
  if (Pos.DistanceTo(GoalTile) > 16) then
    RSW.WalkBlind(GoalTile);

  Rect := RSW.GetTileMS(GoalTile);
  Rect := Rect.Expand(30);
  Bds := Rect.Bounds();
  Bds.LimitTo(Mainscreen.Bounds());

  SRL.FindColors(TPA, DepositColor, Bds);

  if (TPA.Len() > 1) then
    begin
      Mouse.HumanMove(TPA.Mean());
      if Mainscreen.IsUpText('Deposit') then
        begin
          Mouse.Click(MOUSE_LEFT);
          WaitUntil((Inventory.CountItemStack('Coins') < 1), 500, 8000);
        end;
    end
  else
    KeyboardRotate();

  // Failsafe so we don't break too long before depositing coins.
  if (Inventory.CountItemStack('Coins') < 1) then
    Antiban.DoAntiban();
end;

function GetGoodSlots(): TIntegerArray;
var
  i, j: Int32;
  slots: TBoxArray;
  tpa: TPointArray;
  atpa: T2DPointArray;
begin
  if SRL.FindColors(tpa, 65280, Inventory.Bounds()) = 0 then
    Exit();

  atpa := tpa.Cluster(1);
  slots := Inventory.GetSlotBoxes();

  for i := 0 to High(atpa) do
    for j := 0 to High(slots) do
      if atpa[i].Bounds().Contains(slots[j]) then
        Result += j;
end;

procedure AlchItems();
var
  f, t: Int64;
  slots: TIntegerArray;
begin
  f := SRL.NormalRange(1, 3);
  t := SRL.NormalRange(7, 12);
  PrintProgress();
  for f:= f to t do
    begin
      Magic.CastSpell(ERSSPell.HIGH_LEVEL_ALCHEMY);
      WaitUntil(Inventory.IsOpen(), 25, 2000);
      slots := GetGoodSlots();
      if (slots.Len() > 0) then
        Inventory.MouseSlot(slots[0])
      else
        Inventory.MouseSlot(f);
      if Mainscreen.IsUpText('Coins') then
        begin
          Inc(f);
          Inventory.MouseSlot(f);
        end;
      WaitEx(50, 25);
      Mouse.Click(MOUSE_LEFT);
      WaitEx(2250, 100);
    end;
end;

function ShouldDeposit(): boolean;
var Coins: Int32;
begin
  Coins := Inventory.CountItemStack('Coins');
  if (Coins > 5000)
    then Exit(True);

  if ((Coins > 2500) and SRL.Dice(5)) then
    Exit(True);

  Exit(False);
end;

procedure SolveRoom();
var
  GoodItems: TIntegerArray;
  ItemCount: Int32;
begin
  Antiban.DoAntiban(False, False);
  GoodItems := GetGoodSlots();
  ItemCount := GoodItems.Len();
  if (ItemCount > 7) then
    AlchItems()
  else if (ShouldDeposit()) then
    DepositCoins()
  else if (not Inventory.IsFull()) then
    GatherItems()
  else if (APROOM.Bounds.Contains(RSW.GetMyPos())) then
    AlchItems();
end;

begin
  InitiateScript();
  repeat
    begin
      if (not RSClient.IsLoggedIn()) then
        Login.LoginPlayer();
      State := GetState();
      case State of
        'MTALOBBY'   : WalkToStatues();
        'INROOM'     : SolveRoom();
        'STATUEAREA' : EnterRoom();
        'UNKNOWN'    : Logout.ClickLogout();
      end;
    WaitEx(50, 25);
    end;
  until false;
end.