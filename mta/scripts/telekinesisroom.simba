program telekinesisroom;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I WaspLib/osr.simba}
{$DEFINE FORMS_V2}

  // HERE YOU CAN EDIT WHICH ACCOUNT YOU WANT TO USE.
  // FIRST ACCOUNT IN credentials.simba MEANS Login.PlayerIndex := 0
begin
  Login.PlayerIndex := 1;
end;

const
  BREAKAFTER  = 40;
  BREAKFOR    = 5;

var
  RSW: TRSWalker;
  State: String;
  Timer: TStopwatch;
  StartXP: Int32;
  CurrentXP: Int32;
  GainedXP: Int32 := 0;
  JoinTile: TPoint := [268, 110];
  STATUEAREA: TPointArray := [[258, 86], [280, 86], [291, 96],
                              [290, 116], [278, 129], [279, 141],
                              [261, 141], [261, 129], [250, 118],
                              [250, 96]];
  MTALOBBY: TPointArray := [[241, 159], [241, 145], [251, 145],
                            [260, 141], [268, 141], [275, 141],
                            [283, 143], [297, 145], [298, 171],
                            [282, 171], [282, 184], [256, 185],
                            [256, 170], [241, 169]];
  InfoArea: TBox := [460, 228, 509, 268];

procedure PauseTimer(Task: PBreakTask);
var T: PBreakTask;
begin
  Timer.Pause;
  T := Task;
end;

procedure ResumeTimer(Task: PBreakTask);
var T: PBreakTask;
begin
  Timer.Resume;
  T := Task;
end;

// A custom Keyboard version of Antiban.RandomRotate()
// Rotating with mouse3 doesn't work well with RuneLite
procedure KeyboardRotate();
var
  Arrow: Integer;
  Duration: Int64;
begin
  if SRL.Dice(50) then
    Arrow := $25
  else
    Arrow := $27;
  Duration := SRL.NormalRange(500, 1500);
  Keyboard.KeyDown(Arrow);
  Sleep(Duration);
  Keyboard.KeyUp(Arrow);
end;

procedure PrintProgress();
begin
  ClearDebug();
  WriteLn('| MTA v2.0              by n0ll |');
  WriteLn('| The Telekinetic Theatre       |');
  WriteLn('|-------------------------------|');
  WriteLn('| Time running   : ', SRL.MsToTime(GetTimeRunning, Time_Short));
  WriteLn('| Magic XP       : ', GainedXP);
  WriteLn('| XP/Hour        : ', Round((GainedXP/((GetTimeRunning()/3600))), 2), ' K');
  WriteLn('| Failsafe timer : ', SRL.MsToTime((300000-Timer.ElapsedTime), Time_Short));
  WriteLn('| Next break     : ', Antiban.TimeUntilBreak(Antiban.Breaks[0]));
  WriteLn('|-------------------------------|');
end;

procedure SetupAntiBan();
begin
  Antiban.Skills := [ERSSKILL.MAGIC, ERSSKILL.TOTAL];
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.RandomRightClick);
  Antiban.AddTask(ONE_SECOND  * 45,  @Mouse.RandomMovement);
  Antiban.AddTask(ONE_MINUTE  * 5,   @KeyboardRotate);
  Antiban.AddTask(ONE_MINUTE  * 15,  @Antiban.HoverSkills);
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.LoseFocus);
  Antiban.AddBreak(BREAKAFTER * ONE_MINUTE, BREAKFOR * ONE_MINUTE);
  Antiban.AddBreak(12 * ONE_HOUR, 4 * ONE_HOUR);
  Antiban.OnStartBreak := @PauseTimer;
  Antiban.OnFinishBreak := @ResumeTimer;
end;

procedure Downloader(const URL, Filename: string);
var Client: Int32;
begin
  Client := InitializeHTTPClient(False);
  try
    GetHTTPPageEx(Client, URL, Filename);
  finally
    FreeHTTPClient(Client);
  end;
end;

procedure InitiateScript();
begin
  if (not FileExists(AppPath+'\Includes\WaspLib\osr\walker\maps\mta.png')) then
    Downloader('https://i.imgur.com/yRapvnM.png', AppPath+'\Includes\WaspLib\osr\walker\maps\mta.png');

  RSW.Setup('mta');
  SetupAntiBan();
  if not RSClient.IsLoggedIn() then
    Login.LoginPlayer();
  WaitUntil(RSClient.IsLoggedIn(), 100, 10000);
  StartXP := XPBar.Read();
  Timer.Start();
end;


procedure CalculateXP();
var t: Int32;
begin
  CurrentXP := XPBar.Read();
  t         := GainedXP;
  GainedXP  := CurrentXP - StartXP;
  if (GainedXP > t) then
    Timer.Reset();
  if (Timer.ElapsedTime > 300000) then
    TerminateScript('No Gained XP in 5 minutes!');
end;

function InCorrectTile(): Boolean;
var
  TPA: TPointArray;
  OurPos, ArrowPos: TPoint;
begin
  OurPos := Minimap.Center();
  Minimap.WaitYellowArrow(TPA, 1000);
  if (TPA.Len() > 1) then
    begin
      ArrowPos := [TPA.Last().X, TPA.Last().Y+2];
      if (OurPos = ArrowPos) then
        Exit(True)
      else
        Exit(False);
    end
  else
    Exit(False);
end;

function GetState(): String;
begin
  CalculateXP();
  if (SRL.CountColor(CTS0(16764006, 0), InfoArea) > 50) then
    Exit('INROOM');
  if (STATUEAREA.Bounds.Contains(RSW.GetMyPos())) then
    Exit('STATUEAREA');
  if (MTALOBBY.Bounds.Contains(RSW.GetMyPos())) then
    Exit('MTALOBBY');

  Exit('UNKNOWN');
end;

procedure EnterRoom();
var
  TeleportTile: TPoint := [268, 118];
  Rect: TRectangle;
begin
  Rect := RSW.GetTileMs(TeleportTile);
  Mouse.HumanMove(Rect.Mean());
  if Mainscreen.IsUpText('Telekinetic Teleport') then
    Mouse.Click(MOUSE_LEFT)
  else
    KeyboardRotate();
  WaitEx(1000, 250);
end;

procedure ExitRoom();
var
  TPA: TPointArray;
  // ExitColor is orange highlight
  ExitColor: TCTS2Color := CTS2(548850, 2, 0.07, 5.44);
begin
  SRL.FindColors(TPA, ExitColor, Mainscreen.Bounds());
  if (TPA.Len > 0) then
    begin
      Mouse.HumanMove(TPA.Mean());
      WaitEx(50, 25);
      if MainScreen.IsUpText('Exit Teleport') then
        begin
          Mouse.Click(MOUSE_LEFT);
          Wait(1000);
          Exit();
        end
    end;
  KeyboardRotate();
  Antiban.DoAntiban();
end;

procedure TravelToArrow();
var
  TPA, MTPA: TPointArray;
  Pt: TPoint;
  Box: TBox;
begin
  WaitUntil(Minimap.FindArrow(TPA), 50, 4000);

  if (TPA.Len() < 1) then
    Exit();

  if (Mainscreen.FindArrow(MTPA)) then
    begin
      Box := Mainscreen.GetPlayerBox();
      Box := Box.Expand(30);
      Pt := MTPA.Last();
      Pt.Y += 4;
      if Box.Contains(Pt) then
        begin
          Mouse.HumanMove(Pt);
          Wait(50, 100);
          Mouse.Click(MOUSE_LEFT);
          WaitUntil(InCorrectTile(), 500, 4000);
          Exit();
        end;
    end;
  Pt := [TPA.Mean.X+Random(-1, 1), TPA.Mean.Y+4+Random(-1, 1)];
  Mouse.HumanMove(Pt);
  Wait(50, 100);
  Mouse.Click(MOUSE_LEFT);
  WaitUntil(InCorrectTile(), 500, 4000);
end;

procedure HandleChat();
begin
  WaitUntil(Chat.ClickContinue(False), 50, 5000);
  Wait(300, 500);
  WaitUntil(Chat.ClickOption('Yes please!', False), 50, 5000);
  Wait(300, 500);
  WaitUntil(Chat.ClickContinue(False), 50, 5000);
  PrintProgress();
end;

procedure WalkToStatues();
begin
  RSW.WalkBlind(JoinTile);
  WaitEx(1000, 250);
  Antiban.DoAntiban();
end;

procedure FinishRoom();
var
  TPA: TPointArray;
  Pt: TPoint;
begin
  if MainScreen.IsUpText('Cast Tele') then
    Mouse.Click(MOUSE_LEFT);

  SRL.FindColors(TPA, CTS2(12001507, 5, 0.08, 5.52), Mainscreen.Bounds());
  if (TPA.Len > 0) then
    begin
      Pt := TPA.Mean();
      Mouse.HumanMove(Pt);
      WaitEx(50, 25);
      if Mainscreen.IsUpText('Talk-to') then
        begin
        Wait(50, 150);
        Mouse.Click(MOUSE_LEFT);
        Wait(100, 200);
        if Chat.HasContinue() then
          HandleChat();
        end;
      Exit();
    end
  else
    KeyboardRotate();
end;

procedure GrabGuardian();
var
  TPA: TPointArray;
  // color is bright pink
  GuardianColor: TCTS2Color := CTS2(12001507, 5, 0.08, 5.52);
begin
  if (not InCorrectTile()) then
    Exit();

  SRL.FindColors(TPA, GuardianColor, Mainscreen.Bounds());

  if (TPA.Len() > 0) then
    begin
      if (not Mainscreen.IsUpText('Cast Tele')) then
        Magic.CastSpell(ERSSpell.TELEKINETIC_GRAB);
      Mouse.HumanMove(TPA.Mean());
      WaitEx(50, 25);
      if Mainscreen.IsUpText('Maze Guardian') then
        begin
          Mouse.Click(MOUSE_LEFT);
          WaitEx(100, 50);
          if Mainscreen.IsUpText('Talk-to') then
          begin
            FinishRoom();
            Exit();
          end;
          WaitUntil((not InCorrectTile()), 100, 9000);
          Exit();
        end;
    end
  else
    KeyboardRotate();
end;

procedure SolveRoom();
begin
  Antiban.DoAntiban(False, False);
  if (not Minimap.WaitArrow(1150)) then
    ExitRoom()
  else
    begin
      if Chat.HasContinue() then
        FinishRoom()
      else if InCorrectTile() then
        GrabGuardian()
      else
        TravelToArrow();
    end;
end;

begin
  InitiateScript();
  repeat
    begin
      if not RSClient.IsLoggedIn() then Login.LoginPlayer();
      State := GetState();
      case State of
        'MTALOBBY'   : WalkToStatues();
        'INROOM'     : SolveRoom();
        'STATUEAREA' : EnterRoom();
        'UNKNOWN'    : ExitRoom();
      end;
    Wait(150, 350);
    end;
  until false;
end.