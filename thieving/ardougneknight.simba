program knighter;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I WaspLib/osr.simba}
{$DEFINE FORMS_V2}

begin
  Login.PlayerIndex := 1;
  Mouse.Speed := SRL.NormalRange(15, 25);
end;

const
  BREAKAFTER  = 40;
  BREAKFOR    = 5;
  FOOD_AMOUNT = 20;

var
  HPToEatAt: Int32 := 40;
  Food: TRSItem := 'Bass';
  RSW: TRSWalker;
  Timer: TStopwatch;
  StartXP, CurrentXP, GainedXP: Int32;

procedure PauseTimer(Task: PBreakTask);
var T: PBreakTask;
begin
  Timer.Pause;
  T := Task;
end;

procedure ResumeTimer(Task: PBreakTask);
var T: PBreakTask;
begin
  Timer.Resume;
  T := Task;
end;

procedure PrintProgress();
begin
  ClearDebug();
  WriteLn('|-----------------------------|');
  WriteLn('| Time running   : ', SRL.MsToTime(GetTimeRunning, Time_Short));
  WriteLn('| Thieving XP    : ', GainedXP);
  WriteLn('| XP/Hour        : ', Round((GainedXP/((GetTimeRunning()/3600))), 2), ' K');
  WriteLn('| Failsafe timer : ', SRL.MsToTime((300000-Timer.ElapsedTime), Time_Short));
  WriteLn('| Next break     : ', Antiban.TimeUntilBreak(Antiban.Breaks[0]));
  WriteLn('|-----------------------------|');
end;

procedure KeyboardRotate();
var
  Arrow: Integer;
  Duration: Int64;
begin
  if SRL.Dice(50) then
    Arrow := $25
  else
    Arrow := $27;
  Duration := SRL.NormalRange(500, 1500);
  Keyboard.KeyDown(Arrow);
  Sleep(Duration);
  Keyboard.KeyUp(Arrow);
end;

function CheckStunned(): Boolean;
var InfoArea: TBox := [7, 300, 40, 331];
begin
  if (SRL.CountColor(CTS2(65536, 1, 0.01, 0.01), InfoArea) > 25) then
    begin
      //WriteLn('Stunned!');
      Exit(True);
    end
  else
    begin
      //WriteLn('Not stunned.');
      Exit(False);
    end;
end;

procedure HealthManagement();
begin
  if (not RSClient.IsLoggedIn()) then
    Exit();
  if (Minimap.GetHPLevel() < HpToEatAt) then
    begin
      if Inventory.ContainsItem(Food) then
        Inventory.ClickItem(Food)
      else
        TerminateScript('Could not eat food, possible out of it?');
    end;
end;

procedure SetupAntiBan();
begin
  Antiban.Skills := [ERSSKILL.THIEVING, ERSSKILL.TOTAL];
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.RandomRightClick);
  Antiban.AddTask(ONE_SECOND  * 45,  @Mouse.RandomMovement);
  Antiban.AddTask(ONE_MINUTE  * 5,   @KeyboardRotate);
  Antiban.AddTask(ONE_MINUTE  * 15,  @Antiban.HoverSkills);
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.LoseFocus);
  Antiban.AddBreak(ONE_MINUTE * 5, ONE_SECOND*10, 0.2, 0);
  Antiban.AddBreak(BREAKAFTER * ONE_MINUTE, BREAKFOR * ONE_MINUTE);
  Antiban.AddBreak(12 * ONE_HOUR, 4 * ONE_HOUR);
  Antiban.OnStartBreak := @PauseTimer;
  Antiban.OnFinishBreak := @ResumeTimer;
end;

procedure InitiateScript();
begin
  RSW.Setup('world');
  SetupAntiBan();
  if not RSClient.IsLoggedIn() then
    Login.LoginPlayer();
  WaitUntil(RSClient.IsLoggedIn(), 100, 10000);
  StartXP := XPBar.Read();
  Timer.Start();
  WriteLn(RSW.GetMyPos);
end;

procedure CalculateXP();
var t: Int32;
begin
  CurrentXP := XPBar.Read();
  t         := GainedXP;
  GainedXP  := CurrentXP - StartXP;
  if (GainedXP > t) then
    Timer.Reset();
  if (Timer.ElapsedTime > 300000) then
    TerminateScript('No Gained XP in 5 minutes!');
end;

procedure Restock();
var
  BoothTile: TPoint := [6016, 3304];
  BankTile: TPoint := [6004, 3312];
  GoalTile, Pos: TPoint;
  Rect: TRectangle;
  Item: TRSBankItem := [Food, FOOD_AMOUNT, False];
begin
  Pos := RSW.GetMyPos();
  if (Pos.DistanceTo(BoothTile) > 18) then
    begin
      GoalTile := [(BankTile.X+Random(-4, 4)), (BankTile.Y+Random(-4, 4))];
      RSW.WalkBlind(GoalTile);
      Wait(1000);
    end;

  Rect := RSW.GetTileMS(BoothTile);
  Mouse.HumanMove(Rect.Mean());
  WaitEx(50, 40);
  if Mainscreen.IsUpText('Bank') then
    begin
      Mouse.Click(MOUSE_LEFT);
      WaitUntil(Bank.IsOpen(), 500, 6000);
      Bank.DepositAll();
      WaitEx(500, 250);
      Bank.WithdrawItem(Item, True);
      WaitEx(500, 250);
      Bank.Close(60);
      WaitEx(500, 250);
      Exit();
    end;
  KeyboardRotate();
end;

procedure Pickpocket();
var
  KnightColor: TCTS2Color := CTS2(13238527, 1, 0.01, 0.01);
  Pt, Pos: TPoint;
  BankTile: TPoint := [6004, 3312];
  TPA: TPointArray;
begin
  if Mainscreen.IsUpText(['Pickpocket Knigh', 'et Kni']) then
    begin
      Mouse.Click(MOUSE_LEFT);
      WaitUntil((XPBar.WaitXP(1000) or CheckStunned()), 100, 5000);
      Exit();
    end;

  Pos := RSW.GetMyPos();
  if (Pos.DistanceTo(BankTile) > 24) then
    TerminateScript('Lost!');

  PrintProgress();

  SRL.FindColors(TPA, KnightColor, Mainscreen.Bounds());

  if (TPA.Len() > 0) then
    begin
      Pt := TPA.Mean();
      Mouse.HumanMove(Pt);
      WaitEx(30, 25);
      if Mainscreen.IsUpText(['Pickpocket Knigh', 'et Kni']) then
        begin
          Mouse.Click(MOUSE_LEFT);
          WaitUntil((XPBar.WaitXP(1000) or CheckStunned()), 100, 5000);
          Exit();
        end;
    end
  else
    KeyboardRotate();

  if (Timer.ElapsedTime > 30000) then
    KeyboardRotate();
end;

procedure HandlePouches();
var
  Pouches: Int32;
begin
  Pouches := Inventory.CountItemStack('Coin pouch');
  if (Pouches > 22) then
    Inventory.ClickItem('Coin pouch')
  else if ((Pouches > 5) and (SRL.Dice(10))) then
    Inventory.ClickItem('Coin pouch');
end;

procedure RunThiever();
begin
  if (not Inventory.IsOpen()) then
    Inventory.Open();
  HandlePouches();
  if (CheckStunned()) then
    Wait(666, 250)
  else if ((Inventory.CountEmptySlots() < 2) or (Inventory.CountItem(Food) = 0)) then
    Restock()
  else
    PickPocket();
end;

begin
  InitiateScript();
  repeat
    begin
      Antiban.DoAntiban();
      if (not RSClient.IsLoggedIn()) then
        Login.LoginPlayer();
      CalculateXP();
      HealthManagement();
      RunThiever();
      WaitEx(50, 45);
    end;
  until false;
end.